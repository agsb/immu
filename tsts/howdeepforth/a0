 : HOME ;
 : SCROLL ;
 : KEY ;
 : EMIT ;
 : CR ;
 : ?TERMINAL ;
 : LIT ;
 : SETUP ;
 : EXECUTE ;
 : BRANCH ;
 : 0BRANCH ;
 : (LOOP) ;
 : (+LOOP) ;
 : (DO) ;
 : I ;
 : DIGIT ;
 : (FIND) ;
 : ENCLOSE ;
 : EMIT ;
 : KEY ;
 : ?TERMINAL ;
 : CR ;
 : CMOVE ;
 : U* ;
 : U/ ;
 : AND ;
 : OR ;
 : XOR ;
 : SP@ ;
 : SP! ;
 : RP! ;
 : SEMIS ;
 : LEAVE ;
 : >R ;
 : R> ;
 : R ;
 : 0= ;
 : 0< ;
 : + ;
 : D+ ;
 : MINUS ;
 : DMINUS ;
 : OVER ;
 : DROP ;
 : SWAP ;
 : DUP ;
 : +! ;
 : TOGGLE ;
 : FETCH ;
 : C@ ;
 : STORE ;
 : C! ;
 : : DOCOL ?EXEC !CSP CURRENT FETCH CONTEXT STORE CREATE ] SEMIS ;
 : DOCOL ;
 : ; DOCOL ?CSP COMPILE SEMIS SMUDGE [ ; 
 : CONSTANT DOCOL CREATE SMUDGE COMMA SEMIS ;
 : DOCON ;
 : VARIABLE DOCOL CONSTANT SEMIS ;
 : DOVAR ;
 : USER DOCOL CONSTANT SEMIS ;
 : DOUSE ;
 : 0 DOCOL CONSTANT SEMIS ;
 : 1 DOCOL CONSTANT SEMIS ;
 : 2 DOCOL CONSTANT SEMIS ;
 : 3 DOCOL CONSTANT SEMIS ;
 : BL DOCOL CONSTANT SEMIS ;
 : C/L DOCOL CONSTANT SEMIS ;
 : FIRST DOCOL CONSTANT SEMIS ;
 : LIMIT DOCOL CONSTANT SEMIS ;
 : B/BUF DOCOL CONSTANT SEMIS ;
 : B/SCR DOCOL CONSTANT SEMIS ;
 : +ORIGIN DOCOL LITERAL + SEMIS ;
 : TIB DOCOL USER SEMIS ;
 : WIDTH DOCOL USER SEMIS ;
 : WARNING DOCOL USER SEMIS ;
 : FENCE DOCOL USER SEMIS ;
 : DP DOCOL USER SEMIS ;
 : VOC-LINK DOCOL USER SEMIS ;
 : BLK DOCOL USER SEMIS ;
 : IN DOCOL USER SEMIS ;
 : OUT DOCOL USER SEMIS ;
 : SCR DOCOL USER SEMIS ;
 : OFFSET DOCOL USER SEMIS ;
 : CONTEXT DOCOL USER SEMIS ;
 : CURRENT DOCOL USER SEMIS ;
 : STATE DOCOL USER SEMIS ;
 : BASE DOCOL USER SEMIS ;
 : DPL DOCOL USER SEMIS ;
 : PLO DOCOL USER SEMIS ;
 : CSP DOCOL USER SEMIS ;
 : R# DOCOL USER SEMIS ;
 : HLD DOCOL USER SEMIS ;
 : 1+ DOCOL 1 + SEMIS ;
 : 2+ DOCOL 2 + SEMIS ;
 : HERE DOCOL DP FETCH SEMIS ;
 : ALLOT DOCOL DP +! SEMIS ;
 : COMMA DOCOL HERE STORE 2 ALLOT SEMIS ;
 : CCOMMA DOCOL HERE C! 1 ALLOT SEMIS ;
 : - DOCOL MINUS + SEMIS ;
 : = DOCOL - 0= SEMIS ;
 : < DOCOL - 0< SEMIS ;
 : > DOCOL SWAP < SEMIS ;
 : ROT DOCOL >R SWAP R> SWAP SEMIS ;
 : SPACE DOCOL BL EMIT SEMIS ;
 : -DUP DOCOL DUP IF DUP ENDIF SEMIS ;
 : TRAVERSE DOCOL SWAP BEGIN OVER + 7F OVER C@ < UNTIL SWAP DROP SEMIS ;
 : LATEST DOCOL CURRENT FETCH FETCH SEMIS ;
 : LFA DOCOL 4 - SEMIS ;
 : CFA DOCOL 2 - SEMIS ;
 : NFA DOCOL 5 - -1 TRAVERSE SEMIS ;
 : PFA DOCOL 1 TRAVERSE 5 + SEMIS ;
 : !CSP DOCOL SP@ CSP STORE SEMIS ;
 : ?ERROR DOCOL SWAP IF ERROR ELSE DROP ENDIF SEMIS ;
 : ?COMP DOCOL STATE FETCH 0= 11 ?ERROR SEMIS ;
 : ?EXEC DOCOL STATE FETCH 12 ?ERROR SEMIS ;
 : ?PAIRS DOCOL - 13 ?ERROR SEMIS ;
 : ?CSP DOCOL SP@ CSP FETCH - 14 ?ERROR SEMIS ;
 : ?LOADING DOCOL BLK FETCH 0= 16 ?ERROR SEMIS ;
 : COMPILE DOCOL ?COMP R> DUP 2+ >R FETCH COMMA SEMIS ;
 : [ DOCOL 0 STATE STORE SEMIS ;
 : ] DOCOL C0 STATE STORE SEMIS ;
 : SMUDGE DOCOL LATEST 20 TOGGLE SEMIS ;
 : HEX DOCOL 10 BASE STORE SEMIS ;
 : DECIMAL DOCOL 0A BASE STORE SEMIS ;
 : R> DOCOL LATEST PFA CFA STORE SEMIS ;
 : ;: DOCOL ?CSP COMPILE [COMPILE] [ SMUDGE SEMIS ;
 : <BUILDS DOCOL 0 CONSTANT SEMIS ;
 : DOES> DOCOL R> LATEST PFA STORE SEMIS ;
 : DODOE ;
 : COUNT DOCOL DUP 1+ SWAP C@ SEMIS ;
 : TYPE DOCOL -DUP IF OVER + SWAP DO I C@ EMIT LOOP ELSE DROP ENDIF SEMIS ;
 : -TRAILING DOCOL DUP 0 DO OVER OVER + 1 - C@ BL - IF LEAVE ELSE 1 - ENDIF LOOP SEMIS ;
 : R DOCOL COUNT DUP 1+ R> + >R TYPE SEMIS ;
 : ." DOCOL 22 STATE FETCH IF COMPILE WORD HERE C@ 1+ ALLOT ELSE WORD HERE COUNT TYPE ENDIF SEMIS ;
 : EXPECT DOCOL OVER + OVER DO KEY DUP 0E +ORIGIN FETCH = IF DROP 08 OVER I = DUP R> 2 - + >R - ELSE DUP 0D = IF LEAVE DROP BL 0 ELSE DUP ENDIF I C! 0 I 1+ STORE ENDIF EMIT LOOP DROP SEMIS ;
 : QUERY DOCOL TIB FETCH 50 EXPECT 0 IN STORE SEMIS ;
 : X DOCOL BLK FETCH IF 1 BLK +! 0 IN STORE BLK FETCH 7 AND 0= IF ?EXEC R> DROP ENDIF ELSE R> DROP ENDIF SEMIS ;
 : FILL DOCOL SWAP >R OVER C! DUP 1+ R> 1 - CMOVE SEMIS ;
 : ERASE DOCOL 0 FILL SEMIS ;
 : BLANKS DOCOL BL FILL SEMIS ;
 : HOLD DOCOL -1 HLD +! HLD FETCH C! SEMIS ;
 : PAD DOCOL HERE 44 + SEMIS ;
 : WORD DOCOL BLK FETCH IF BLK FETCH BLOCK ELSE TIB FETCH ENDIF IN FETCH + SWAP ENCLOSE HERE 22 BLANKS IN +! OVER - >R R HERE C! + HERE 1+ R> CMOVE SEMIS ;
 : BEGIN DOCOL 1+ DUP >R C@ BASE FETCH DIGIT WHILE SWAP BASE FETCH U* DROP ROT BASE FETCH U* D+ DPL FETCH 1+ IF 1 DPL +! ENDIF R> REPEAT R> SEMIS ;
 : NUMBER DOCOL 0 0 ROT DUP 1+ C@ 2D = DUP >R + -1 BEGIN DPL STORE DUP C@ BL - WHILE DUP C@ 2E - 0 ?ERROR 0 REPEAT DROP R> IF DMINUS ENDIF SEMIS ;
 : -FIND DOCOL BL WORD HERE CONTEXT FETCH FETCH DUP 0= IF DROP HERE LATEST ENDIF SEMIS ;
 : (ABORT) DOCOL ABORT SEMIS ;
 : ERROR DOCOL WARNING FETCH 0< IF (ABORT) ENDIF HERE COUNT TYPE ." ? " MESSAGE SP! IN FETCH BLK FETCH QUIT SEMIS ;
 : ID. DOCOL PAD 020 5F FILL DUP PFA LFA OVER - PAD SWAP CMOVE PAD COUNT 01F AND TYPE SPACE SEMIS ;
 : CREATE DOCOL TIB HERE 0A0 + < 2 ?ERROR -FIND IF DROP NFA ID. 4 MESSAGE SPACE ENDIF HERE DUP C@ WIDTH FETCH MIN 1+ ALLOT DP C@ 0FD = ALLOT DUP A0 TOGGLE HERE 1 - 80 TOGGLE LATEST COMMA CURRENT FETCH STORE HERE 2+ COMMA SEMIS ;
 : [COMPILE] DOCOL -FIND 0= 0 ?ERROR DROP CFA COMMA SEMIS ;
 : LITERAL DOCOL STATE FETCH IF COMPILE LIT COMMA ENDIF SEMIS ;
 : DLITERAL DOCOL STATE FETCH IF SWAP [COMPILE] LITERAL [COMPILE] LITERAL ENDIF SEMIS ;
 : ?STACK DOCOL 09E SP@ < 1 ?ERROR SP@ 020 < 7 ?ERROR SEMIS ;
 : INTERPRET DOCOL BEGIN -FIND IF STATE FETCH < IF CFA COMMA ELSE CFA EXECUTE ENDIF ?STACK ELSE HERE NUMBER DPL FETCH 1+ IF [COMPILE] DLITERAL ELSE DROP [COMPILE] LITERAL ENDIF ?STACK ENDIF AGAIN SEMIS ;
 : IMMEDIATE DOCOL LATEST 40 TOGGLE SEMIS ;
 : VOCABULARY DOCOL <BUILDS A081 COMMA CURRENT FETCH CFA COMMA HERE VOC-LINK FETCH COMMA VOC-LINK STORE DOES> 2+ CONTEXT STORE SEMIS ;
 : DEFINITIONS DOCOL CONTEXT FETCH CURRENT STORE SEMIS ;
 : ( DOCOL 29 WORD SEMIS ;
 : QUIT DOCOL 0 BLK STORE [COMPILE] [ BEGIN RP! CR QUERY INTERPRET STATE FETCH 0= IF ." OK" ENDIF AGAIN SEMIS ;
 : ABORT DOCOL SP! DECIMAL DR0 CR ." FORTH-65 V 4.0" [COMPILE] FORTH DEFINITIONS QUIT SEMIS ;
 : COLD ;
 : S->D ;
 : +- DOCOL 0< IF MINUS ENDIF SEMIS ;
 : D+- DOCOL 0< IF DMINUS ENDIF SEMIS ;
 : ABS DOCOL DUP +- SEMIS ;
 : DABS DOCOL DUP D+- SEMIS ;
 : MIN DOCOL OVER OVER > IF SWAP ENDIF DROP SEMIS ;
 : MAX DOCOL OVER OVER < IF SWAP ENDIF DROP SEMIS ;
 : M* DOCOL OVER OVER XOR >R ABS SWAP ABS U* R> D+- SEMIS ;
 : M/ DOCOL OVER >R >R DABS R ABS U/ R> R XOR +- SWAP R> +- SWAP SEMIS ;
 : * DOCOL U* DROP SEMIS ;
 : /MOD DOCOL >R S->D R> M/ SEMIS ;
 : / DOCOL /MOD SWAP DROP SEMIS ;
 : MOD DOCOL /MOD DROP SEMIS ;
 : */MOD DOCOL >R M* R> M/ SEMIS ;
 : */ DOCOL */MOD SWAP DROP SEMIS ;
 : M/MOD DOCOL >R 0 R U/ R> SWAP >R U/ R> SEMIS ;
 : USE DOCOL VARIABLE SEMIS ;
 : USE DOCOL VARIABLE SEMIS ;
 : +BUF DOCOL 84 + DUP LIMIT = IF DROP FIRST ENDIF DUP PREV FETCH - SEMIS ;
 : UPDATE DOCOL PREV FETCH FETCH 8000 OR PREV FETCH STORE SEMIS ;
 : EMPTY-BUFFERS DOCOL FIRST LIMIT OVER - ERASE SEMIS ;
 : DR0 DOCOL 0 OFFSET STORE SEMIS ;
 : DR1 DOCOL 07D0 OFFSET STORE SEMIS ;
 : BUFFER DOCOL USE FETCH DUP >R BEGIN +BUF UNTIL USE STORE R FETCH 0< IF R 2+ R FETCH 7FFF AND 0 R/W ENDIF R STORE R PREV STORE R> 2+ SEMIS ;
 : BLOCK DOCOL OFFSET FETCH + >R PREV FETCH DUP FETCH R - DUP + IF BEGIN +BUF 0= IF DROP R BUFFER DUP R 1 R/W 2 - ENDIF DUP FETCH R - DUP + 0= UNTIL DUP PREV STORE ENDIF R> DROP 2+ SEMIS ;
 : >R DOCOL C/L B/BUF */MOD R> B/SCR * + BLOCK + C/L SEMIS ;
 : .LINE DOCOL -TRAILING TYPE SEMIS ;
 : MESSAGE DOCOL WARNING FETCH IF -DUP IF 4 OFFSET FETCH B/SCR / - .LINE ENDIF ELSE ." MSG # " DOT ENDIF SEMIS ;
 : LOAD DOCOL BLK FETCH >R IN FETCH >R 0 IN STORE B/SCR * BLK STORE INTERPRET R> IN STORE R> BLK STORE SEMIS ;
 : ?LOADING DOCOL 0 IN STORE B/SCR BLK FETCH OVER MOD - BLK +! SEMIS ;
 : (EMIT) ;
 : (KEY) ;
 : (TERMINAL) ;
 : (CR) ;
 : DATA DOCOL CONSTANT SEMIS ;
 : STATUS DOCOL CONSTANT SEMIS ;
 : #HL DOCOL 0 0A U/ SWAP 30 + HOLD SEMIS ;
 : D/CHAR ;
 : ?DISC DOCOL 1 D/CHAR >R 0= IF R 15 = IF CR BEGIN 4 D/CHAR EMIT UNTIL QUIT ENDIF BEGIN 4 D/CHAR DROP UNTIL ENDIF R> DROP SEMIS ;
 : BLOCK-WRITE ;
 : BLOCK-READ ;
 : R/W DOCOL LITERAL HLD STORE SWAP 0 OVER > OVER 0F9F > OR 6 ?ERROR 07D0 /MOD #HL DROP 2F HOLD BL HOLD 1A /MOD SWAP 1+ #HL #HL DROP BL HOLD #HL #HL DROP BL HOLD DUP IF 49 ELSE 4F ENDIF HOLD HLD FETCH 0A BLOCK-WRITE ?DISC IF BLOCK-READ ELSE B/BUF BLOCK-WRITE ENDIF ?DISC SEMIS ;
 : TICK DOCOL -FIND 0= 0 ?ERROR DROP [COMPILE] LITERAL SEMIS ;
 : FORGET DOCOL [COMPILE] TICK NFA DUP FENCE FETCH U< 15 ?ERROR >R VOC-LINK FETCH BEGIN R OVER U< WHILE [COMPILE] FORTH DEFINITIONS FETCH DUP VOC-LINK STORE REPEAT BEGIN DUP 4 - BEGIN PFA LFA FETCH DUP R U< UNTIL OVER 2 - STORE FETCH -DUP 0= UNTIL R> DP STORE SEMIS ;
 : TICK DOCOL -FIND 0= 0 ?ERROR DROP [COMPILE] LITERAL SEMIS ;
 : FORGET DOCOL CURRENT FETCH CONTEXT FETCH - 18 ?ERROR [COMPILE] TICK DUP FENCE FETCH < 15 ?ERROR DUP NFA DP STORE LFA FETCH CURRENT FETCH STORE SEMIS ;
 : BACK DOCOL HERE - COMMA SEMIS ;
 : BEGIN DOCOL ?COMP HERE 1 SEMIS ;
 : ENDIF DOCOL ?COMP 2 ?PAIRS HERE OVER - SWAP STORE SEMIS ;
 : THEN DOCOL [COMPILE] ENDIF SEMIS ;
 : DO DOCOL COMPILE (DO) HERE 3 SEMIS ;
 : LOOP DOCOL 3 ?PAIRS COMPILE (LOOP) BACK SEMIS ;
 : +LOOP DOCOL 3 ?PAIRS COMPILE (+LOOP) BACK SEMIS ;
 : UNTIL DOCOL 1 ?PAIRS COMPILE 0BRANCH BACK SEMIS ;
 : END DOCOL [COMPILE] UNTIL SEMIS ;
 : AGAIN DOCOL 1 ?PAIRS COMPILE BRANCH BACK SEMIS ;
 : REPEAT DOCOL >R >R [COMPILE] AGAIN R> R> 2 - [COMPILE] ENDIF SEMIS ;
 : IF DOCOL COMPILE 0BRANCH HERE 0 COMMA 2 SEMIS ;
 : ELSE DOCOL 2 ?PAIRS COMPILE BRANCH HERE 0 COMMA SWAP 2 [COMPILE] ENDIF 2 SEMIS ;
 : WHILE DOCOL [COMPILE] IF 2+ SEMIS ;
 : SPACES DOCOL 0 MAX -DUP IF 0 DO SPACE LOOP ENDIF SEMIS ;
 : <# DOCOL PAD HLD STORE SEMIS ;
 : #> DOCOL DROP DROP HLD FETCH PAD OVER - SEMIS ;
 : SIGN DOCOL ROT 0< IF 2D HOLD ENDIF SEMIS ;
 : # DOCOL BASE FETCH M/MOD ROT 9 OVER < IF 7 + ENDIF 30 + HOLD SEMIS ;
 : #S DOCOL BEGIN # OVER OVER OR 0= UNTIL SEMIS ;
 : D.R DOCOL >R SWAP OVER DABS <# #S SIGN #> R> OVER - SPACES TYPE SEMIS ;
 : D. DOCOL 0 D.R SPACE SEMIS ;
 : .R DOCOL >R S->D R> D.R SEMIS ;
 : DOT DOCOL S->D D. SEMIS ;
 : ? DOCOL FETCH DOT SEMIS ;
 : LIST DOCOL DECIMAL CR DUP SCR STORE ." SCR # " DOT 10 0 DO CR I 3 .R SPACE I SCR FETCH .LINE LOOP CR SEMIS ;
 : INDEX DOCOL 0C EMIT CR 1+ SWAP DO CR I 3 .R SPACE 0 I .LINE ?TERMINAL IF LEAVE ENDIF LOOP SEMIS ;
 : TRIAD DOCOL 0C EMIT 3 / 3 * 3 OVER + SWAP DO CR I LIST LOOP CR 0F MESSAGE CR SEMIS ;
 : VLIST DOCOL 80 OUT STORE CONTEXT FETCH FETCH BEGIN OUT FETCH C/L > IF CR 0 OUT STORE ENDIF DUP ID. SPACE SPACE PFA LFA FETCH DUP 0= ?TERMINAL OR UNTIL DROP SEMIS ;
 : MON DOCOL 0 CCOMMA 4C CCOMMA TICK LIT 18 + COMMA SMUDGE DECIMAL HERE FENCE STORE HERE 28 +ORIGIN STORE HERE 30 +ORIGIN STORE LATEST 12 +ORIGIN STORE TICK FORTH 6 + 32 +ORIGIN STORE SEMIS ;
